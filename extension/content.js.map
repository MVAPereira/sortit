{"version":3,"file":"content.js","mappings":";;;;;;+CACA,qJAAAA,mBAAA,YAAAA,oBAAA,WAAAC,OAAA,SAAAA,OAAA,OAAAC,EAAA,GAAAC,MAAA,CAAAC,SAAA,EAAAC,MAAA,GAAAH,EAAA,CAAAI,cAAA,EAAAC,cAAA,GAAAJ,MAAA,CAAAI,cAAA,cAAAC,GAAA,EAAAC,GAAA,EAAAC,IAAA,IAAAF,GAAA,CAAAC,GAAA,IAAAC,IAAA,CAAAC,KAAA,KAAAC,OAAA,wBAAAC,MAAA,GAAAA,MAAA,OAAAC,cAAA,GAAAF,OAAA,CAAAG,QAAA,kBAAAC,mBAAA,GAAAJ,OAAA,CAAAK,aAAA,uBAAAC,iBAAA,GAAAN,OAAA,CAAAO,WAAA,8BAAAC,OAAAZ,GAAA,EAAAC,GAAA,EAAAE,KAAA,WAAAR,MAAA,CAAAI,cAAA,CAAAC,GAAA,EAAAC,GAAA,IAAAE,KAAA,EAAAA,KAAA,EAAAU,UAAA,MAAAC,YAAA,MAAAC,QAAA,SAAAf,GAAA,CAAAC,GAAA,WAAAW,MAAA,mBAAAI,GAAA,IAAAJ,MAAA,YAAAA,OAAAZ,GAAA,EAAAC,GAAA,EAAAE,KAAA,WAAAH,GAAA,CAAAC,GAAA,IAAAE,KAAA,gBAAAc,KAAAC,OAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,WAAA,QAAAC,cAAA,GAAAH,OAAA,IAAAA,OAAA,CAAAvB,SAAA,YAAA2B,SAAA,GAAAJ,OAAA,GAAAI,SAAA,EAAAC,SAAA,GAAA7B,MAAA,CAAA8B,MAAA,CAAAH,cAAA,CAAA1B,SAAA,GAAA8B,OAAA,OAAAC,OAAA,CAAAN,WAAA,gBAAAtB,cAAA,CAAAyB,SAAA,eAAArB,KAAA,EAAAyB,gBAAA,CAAAV,OAAA,EAAAE,IAAA,EAAAM,OAAA,MAAAF,SAAA,aAAAK,SAAAC,EAAA,EAAA9B,GAAA,EAAA+B,GAAA,mBAAAC,IAAA,YAAAD,GAAA,EAAAD,EAAA,CAAAG,IAAA,CAAAjC,GAAA,EAAA+B,GAAA,cAAAf,GAAA,aAAAgB,IAAA,WAAAD,GAAA,EAAAf,GAAA,QAAAvB,OAAA,CAAAwB,IAAA,GAAAA,IAAA,MAAAiB,gBAAA,gBAAAX,UAAA,cAAAY,kBAAA,cAAAC,2BAAA,SAAAC,iBAAA,OAAAzB,MAAA,CAAAyB,iBAAA,EAAA/B,cAAA,qCAAAgC,QAAA,GAAA3C,MAAA,CAAA4C,cAAA,EAAAC,uBAAA,GAAAF,QAAA,IAAAA,QAAA,CAAAA,QAAA,CAAAG,MAAA,QAAAD,uBAAA,IAAAA,uBAAA,KAAA9C,EAAA,IAAAG,MAAA,CAAAoC,IAAA,CAAAO,uBAAA,EAAAlC,cAAA,MAAA+B,iBAAA,GAAAG,uBAAA,OAAAE,EAAA,GAAAN,0BAAA,CAAAxC,SAAA,GAAA2B,SAAA,CAAA3B,SAAA,GAAAD,MAAA,CAAA8B,MAAA,CAAAY,iBAAA,YAAAM,sBAAA/C,SAAA,gCAAAgD,OAAA,WAAAC,MAAA,IAAAjC,MAAA,CAAAhB,SAAA,EAAAiD,MAAA,YAAAd,GAAA,gBAAAe,OAAA,CAAAD,MAAA,EAAAd,GAAA,sBAAAgB,cAAAvB,SAAA,EAAAwB,WAAA,aAAAC,OAAAJ,MAAA,EAAAd,GAAA,EAAAmB,OAAA,EAAAC,MAAA,QAAAC,MAAA,GAAAvB,QAAA,CAAAL,SAAA,CAAAqB,MAAA,GAAArB,SAAA,EAAAO,GAAA,mBAAAqB,MAAA,CAAApB,IAAA,QAAAqB,MAAA,GAAAD,MAAA,CAAArB,GAAA,EAAA5B,KAAA,GAAAkD,MAAA,CAAAlD,KAAA,SAAAA,KAAA,gBAAAmD,OAAA,CAAAnD,KAAA,KAAAN,MAAA,CAAAoC,IAAA,CAAA9B,KAAA,eAAA6C,WAAA,CAAAE,OAAA,CAAA/C,KAAA,CAAAoD,OAAA,EAAAC,IAAA,WAAArD,KAAA,IAAA8C,MAAA,SAAA9C,KAAA,EAAA+C,OAAA,EAAAC,MAAA,gBAAAnC,GAAA,IAAAiC,MAAA,UAAAjC,GAAA,EAAAkC,OAAA,EAAAC,MAAA,QAAAH,WAAA,CAAAE,OAAA,CAAA/C,KAAA,EAAAqD,IAAA,WAAAC,SAAA,IAAAJ,MAAA,CAAAlD,KAAA,GAAAsD,SAAA,EAAAP,OAAA,CAAAG,MAAA,gBAAAK,KAAA,WAAAT,MAAA,UAAAS,KAAA,EAAAR,OAAA,EAAAC,MAAA,SAAAA,MAAA,CAAAC,MAAA,CAAArB,GAAA,SAAA4B,eAAA,EAAA5D,cAAA,oBAAAI,KAAA,WAAAA,MAAA0C,MAAA,EAAAd,GAAA,aAAA6B,2BAAA,eAAAZ,WAAA,WAAAE,OAAA,EAAAC,MAAA,IAAAF,MAAA,CAAAJ,MAAA,EAAAd,GAAA,EAAAmB,OAAA,EAAAC,MAAA,gBAAAQ,eAAA,GAAAA,eAAA,GAAAA,eAAA,CAAAH,IAAA,CAAAI,0BAAA,EAAAA,0BAAA,IAAAA,0BAAA,qBAAAhC,iBAAAV,OAAA,EAAAE,IAAA,EAAAM,OAAA,QAAAmC,KAAA,sCAAAhB,MAAA,EAAAd,GAAA,wBAAA8B,KAAA,YAAAC,KAAA,sDAAAD,KAAA,oBAAAhB,MAAA,QAAAd,GAAA,SAAAgC,UAAA,WAAArC,OAAA,CAAAmB,MAAA,GAAAA,MAAA,EAAAnB,OAAA,CAAAK,GAAA,GAAAA,GAAA,UAAAiC,QAAA,GAAAtC,OAAA,CAAAsC,QAAA,MAAAA,QAAA,QAAAC,cAAA,GAAAC,mBAAA,CAAAF,QAAA,EAAAtC,OAAA,OAAAuC,cAAA,QAAAA,cAAA,KAAA/B,gBAAA,mBAAA+B,cAAA,qBAAAvC,OAAA,CAAAmB,MAAA,EAAAnB,OAAA,CAAAyC,IAAA,GAAAzC,OAAA,CAAA0C,KAAA,GAAA1C,OAAA,CAAAK,GAAA,sBAAAL,OAAA,CAAAmB,MAAA,6BAAAgB,KAAA,QAAAA,KAAA,gBAAAnC,OAAA,CAAAK,GAAA,EAAAL,OAAA,CAAA2C,iBAAA,CAAA3C,OAAA,CAAAK,GAAA,uBAAAL,OAAA,CAAAmB,MAAA,IAAAnB,OAAA,CAAA4C,MAAA,WAAA5C,OAAA,CAAAK,GAAA,GAAA8B,KAAA,oBAAAT,MAAA,GAAAvB,QAAA,CAAAX,OAAA,EAAAE,IAAA,EAAAM,OAAA,oBAAA0B,MAAA,CAAApB,IAAA,QAAA6B,KAAA,GAAAnC,OAAA,CAAA6C,IAAA,mCAAAnB,MAAA,CAAArB,GAAA,KAAAG,gBAAA,qBAAA/B,KAAA,EAAAiD,MAAA,CAAArB,GAAA,EAAAwC,IAAA,EAAA7C,OAAA,CAAA6C,IAAA,kBAAAnB,MAAA,CAAApB,IAAA,KAAA6B,KAAA,gBAAAnC,OAAA,CAAAmB,MAAA,YAAAnB,OAAA,CAAAK,GAAA,GAAAqB,MAAA,CAAArB,GAAA,mBAAAmC,oBAAAF,QAAA,EAAAtC,OAAA,QAAA8C,UAAA,GAAA9C,OAAA,CAAAmB,MAAA,EAAAA,MAAA,GAAAmB,QAAA,CAAAzD,QAAA,CAAAiE,UAAA,OAAAC,SAAA,KAAA5B,MAAA,SAAAnB,OAAA,CAAAsC,QAAA,qBAAAQ,UAAA,IAAAR,QAAA,CAAAzD,QAAA,eAAAmB,OAAA,CAAAmB,MAAA,aAAAnB,OAAA,CAAAK,GAAA,GAAA0C,SAAA,EAAAP,mBAAA,CAAAF,QAAA,EAAAtC,OAAA,eAAAA,OAAA,CAAAmB,MAAA,kBAAA2B,UAAA,KAAA9C,OAAA,CAAAmB,MAAA,YAAAnB,OAAA,CAAAK,GAAA,OAAA2C,SAAA,uCAAAF,UAAA,iBAAAtC,gBAAA,MAAAkB,MAAA,GAAAvB,QAAA,CAAAgB,MAAA,EAAAmB,QAAA,CAAAzD,QAAA,EAAAmB,OAAA,CAAAK,GAAA,mBAAAqB,MAAA,CAAApB,IAAA,SAAAN,OAAA,CAAAmB,MAAA,YAAAnB,OAAA,CAAAK,GAAA,GAAAqB,MAAA,CAAArB,GAAA,EAAAL,OAAA,CAAAsC,QAAA,SAAA9B,gBAAA,MAAAyC,IAAA,GAAAvB,MAAA,CAAArB,GAAA,SAAA4C,IAAA,GAAAA,IAAA,CAAAJ,IAAA,IAAA7C,OAAA,CAAAsC,QAAA,CAAAY,UAAA,IAAAD,IAAA,CAAAxE,KAAA,EAAAuB,OAAA,CAAAmD,IAAA,GAAAb,QAAA,CAAAc,OAAA,eAAApD,OAAA,CAAAmB,MAAA,KAAAnB,OAAA,CAAAmB,MAAA,WAAAnB,OAAA,CAAAK,GAAA,GAAA0C,SAAA,GAAA/C,OAAA,CAAAsC,QAAA,SAAA9B,gBAAA,IAAAyC,IAAA,IAAAjD,OAAA,CAAAmB,MAAA,YAAAnB,OAAA,CAAAK,GAAA,OAAA2C,SAAA,sCAAAhD,OAAA,CAAAsC,QAAA,SAAA9B,gBAAA,cAAA6C,aAAAC,IAAA,QAAAC,KAAA,KAAAC,MAAA,EAAAF,IAAA,YAAAA,IAAA,KAAAC,KAAA,CAAAE,QAAA,GAAAH,IAAA,WAAAA,IAAA,KAAAC,KAAA,CAAAG,UAAA,GAAAJ,IAAA,KAAAC,KAAA,CAAAI,QAAA,GAAAL,IAAA,WAAAM,UAAA,CAAAC,IAAA,CAAAN,KAAA,cAAAO,cAAAP,KAAA,QAAA7B,MAAA,GAAA6B,KAAA,CAAAQ,UAAA,QAAArC,MAAA,CAAApB,IAAA,oBAAAoB,MAAA,CAAArB,GAAA,EAAAkD,KAAA,CAAAQ,UAAA,GAAArC,MAAA,aAAAzB,QAAAN,WAAA,SAAAiE,UAAA,MAAAJ,MAAA,aAAA7D,WAAA,CAAAuB,OAAA,CAAAmC,YAAA,cAAAW,KAAA,iBAAAjD,OAAAkD,QAAA,QAAAA,QAAA,QAAAC,cAAA,GAAAD,QAAA,CAAArF,cAAA,OAAAsF,cAAA,SAAAA,cAAA,CAAA3D,IAAA,CAAA0D,QAAA,4BAAAA,QAAA,CAAAd,IAAA,SAAAc,QAAA,OAAAE,KAAA,CAAAF,QAAA,CAAAG,MAAA,SAAAC,CAAA,OAAAlB,IAAA,YAAAA,KAAA,aAAAkB,CAAA,GAAAJ,QAAA,CAAAG,MAAA,OAAAjG,MAAA,CAAAoC,IAAA,CAAA0D,QAAA,EAAAI,CAAA,UAAAlB,IAAA,CAAA1E,KAAA,GAAAwF,QAAA,CAAAI,CAAA,GAAAlB,IAAA,CAAAN,IAAA,OAAAM,IAAA,SAAAA,IAAA,CAAA1E,KAAA,GAAAsE,SAAA,EAAAI,IAAA,CAAAN,IAAA,OAAAM,IAAA,YAAAA,IAAA,CAAAA,IAAA,GAAAA,IAAA,eAAAA,IAAA,EAAAd,UAAA,eAAAA,WAAA,aAAA5D,KAAA,EAAAsE,SAAA,EAAAF,IAAA,iBAAApC,iBAAA,CAAAvC,SAAA,GAAAwC,0BAAA,EAAArC,cAAA,CAAA2C,EAAA,mBAAAvC,KAAA,EAAAiC,0BAAA,EAAAtB,YAAA,SAAAf,cAAA,CAAAqC,0BAAA,mBAAAjC,KAAA,EAAAgC,iBAAA,EAAArB,YAAA,SAAAqB,iBAAA,CAAA6D,WAAA,GAAApF,MAAA,CAAAwB,0BAAA,EAAA1B,iBAAA,wBAAAjB,OAAA,CAAAwG,mBAAA,aAAAC,MAAA,QAAAC,IAAA,wBAAAD,MAAA,IAAAA,MAAA,CAAAE,WAAA,WAAAD,IAAA,KAAAA,IAAA,KAAAhE,iBAAA,6BAAAgE,IAAA,CAAAH,WAAA,IAAAG,IAAA,CAAAE,IAAA,OAAA5G,OAAA,CAAA6G,IAAA,aAAAJ,MAAA,WAAAvG,MAAA,CAAA4G,cAAA,GAAA5G,MAAA,CAAA4G,cAAA,CAAAL,MAAA,EAAA9D,0BAAA,KAAA8D,MAAA,CAAAM,SAAA,GAAApE,0BAAA,EAAAxB,MAAA,CAAAsF,MAAA,EAAAxF,iBAAA,yBAAAwF,MAAA,CAAAtG,SAAA,GAAAD,MAAA,CAAA8B,MAAA,CAAAiB,EAAA,GAAAwD,MAAA,KAAAzG,OAAA,CAAAgH,KAAA,aAAA1E,GAAA,aAAAwB,OAAA,EAAAxB,GAAA,OAAAY,qBAAA,CAAAI,aAAA,CAAAnD,SAAA,GAAAgB,MAAA,CAAAmC,aAAA,CAAAnD,SAAA,EAAAY,mBAAA,iCAAAf,OAAA,CAAAsD,aAAA,GAAAA,aAAA,EAAAtD,OAAA,CAAAiH,KAAA,aAAAxF,OAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,WAAA,EAAA2B,WAAA,eAAAA,WAAA,KAAAA,WAAA,GAAA2D,OAAA,OAAAC,IAAA,OAAA7D,aAAA,CAAA9B,IAAA,CAAAC,OAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,WAAA,GAAA2B,WAAA,UAAAvD,OAAA,CAAAwG,mBAAA,CAAA9E,OAAA,IAAAyF,IAAA,GAAAA,IAAA,CAAA/B,IAAA,GAAArB,IAAA,WAAAH,MAAA,WAAAA,MAAA,CAAAkB,IAAA,GAAAlB,MAAA,CAAAlD,KAAA,GAAAyG,IAAA,CAAA/B,IAAA,WAAAlC,qBAAA,CAAAD,EAAA,GAAA9B,MAAA,CAAA8B,EAAA,EAAAhC,iBAAA,gBAAAE,MAAA,CAAA8B,EAAA,EAAApC,cAAA,iCAAAM,MAAA,CAAA8B,EAAA,6DAAAjD,OAAA,CAAAoH,IAAA,aAAAC,GAAA,QAAAC,MAAA,GAAApH,MAAA,CAAAmH,GAAA,GAAAD,IAAA,gBAAA5G,GAAA,IAAA8G,MAAA,EAAAF,IAAA,CAAAtB,IAAA,CAAAtF,GAAA,UAAA4G,IAAA,CAAAG,OAAA,aAAAnC,KAAA,WAAAgC,IAAA,CAAAf,MAAA,SAAA7F,GAAA,GAAA4G,IAAA,CAAAI,GAAA,QAAAhH,GAAA,IAAA8G,MAAA,SAAAlC,IAAA,CAAA1E,KAAA,GAAAF,GAAA,EAAA4E,IAAA,CAAAN,IAAA,OAAAM,IAAA,WAAAA,IAAA,CAAAN,IAAA,OAAAM,IAAA,QAAApF,OAAA,CAAAgD,MAAA,GAAAA,MAAA,EAAAd,OAAA,CAAA/B,SAAA,KAAAwG,WAAA,EAAAzE,OAAA,EAAA+D,KAAA,WAAAA,MAAAwB,aAAA,aAAAC,IAAA,WAAAtC,IAAA,WAAAV,IAAA,QAAAC,KAAA,GAAAK,SAAA,OAAAF,IAAA,YAAAP,QAAA,cAAAnB,MAAA,gBAAAd,GAAA,GAAA0C,SAAA,OAAAa,UAAA,CAAA1C,OAAA,CAAA4C,aAAA,IAAA0B,aAAA,WAAAb,IAAA,kBAAAA,IAAA,CAAAe,MAAA,OAAAvH,MAAA,CAAAoC,IAAA,OAAAoE,IAAA,MAAAR,KAAA,EAAAQ,IAAA,CAAAgB,KAAA,cAAAhB,IAAA,IAAA5B,SAAA,MAAA6C,IAAA,WAAAA,KAAA,SAAA/C,IAAA,WAAAgD,UAAA,QAAAjC,UAAA,IAAAG,UAAA,kBAAA8B,UAAA,CAAAvF,IAAA,QAAAuF,UAAA,CAAAxF,GAAA,cAAAyF,IAAA,KAAAnD,iBAAA,WAAAA,kBAAAoD,SAAA,aAAAlD,IAAA,QAAAkD,SAAA,MAAA/F,OAAA,kBAAAgG,OAAAC,GAAA,EAAAC,MAAA,WAAAxE,MAAA,CAAApB,IAAA,YAAAoB,MAAA,CAAArB,GAAA,GAAA0F,SAAA,EAAA/F,OAAA,CAAAmD,IAAA,GAAA8C,GAAA,EAAAC,MAAA,KAAAlG,OAAA,CAAAmB,MAAA,WAAAnB,OAAA,CAAAK,GAAA,GAAA0C,SAAA,KAAAmD,MAAA,aAAA7B,CAAA,QAAAT,UAAA,CAAAQ,MAAA,MAAAC,CAAA,SAAAA,CAAA,QAAAd,KAAA,QAAAK,UAAA,CAAAS,CAAA,GAAA3C,MAAA,GAAA6B,KAAA,CAAAQ,UAAA,iBAAAR,KAAA,CAAAC,MAAA,SAAAwC,MAAA,aAAAzC,KAAA,CAAAC,MAAA,SAAAiC,IAAA,QAAAU,QAAA,GAAAhI,MAAA,CAAAoC,IAAA,CAAAgD,KAAA,eAAA6C,UAAA,GAAAjI,MAAA,CAAAoC,IAAA,CAAAgD,KAAA,qBAAA4C,QAAA,IAAAC,UAAA,aAAAX,IAAA,GAAAlC,KAAA,CAAAE,QAAA,SAAAuC,MAAA,CAAAzC,KAAA,CAAAE,QAAA,gBAAAgC,IAAA,GAAAlC,KAAA,CAAAG,UAAA,SAAAsC,MAAA,CAAAzC,KAAA,CAAAG,UAAA,cAAAyC,QAAA,aAAAV,IAAA,GAAAlC,KAAA,CAAAE,QAAA,SAAAuC,MAAA,CAAAzC,KAAA,CAAAE,QAAA,qBAAA2C,UAAA,YAAAhE,KAAA,qDAAAqD,IAAA,GAAAlC,KAAA,CAAAG,UAAA,SAAAsC,MAAA,CAAAzC,KAAA,CAAAG,UAAA,YAAAd,MAAA,WAAAA,OAAAtC,IAAA,EAAAD,GAAA,aAAAgE,CAAA,QAAAT,UAAA,CAAAQ,MAAA,MAAAC,CAAA,SAAAA,CAAA,QAAAd,KAAA,QAAAK,UAAA,CAAAS,CAAA,OAAAd,KAAA,CAAAC,MAAA,SAAAiC,IAAA,IAAAtH,MAAA,CAAAoC,IAAA,CAAAgD,KAAA,wBAAAkC,IAAA,GAAAlC,KAAA,CAAAG,UAAA,QAAA2C,YAAA,GAAA9C,KAAA,aAAA8C,YAAA,iBAAA/F,IAAA,mBAAAA,IAAA,KAAA+F,YAAA,CAAA7C,MAAA,IAAAnD,GAAA,IAAAA,GAAA,IAAAgG,YAAA,CAAA3C,UAAA,KAAA2C,YAAA,cAAA3E,MAAA,GAAA2E,YAAA,GAAAA,YAAA,CAAAtC,UAAA,cAAArC,MAAA,CAAApB,IAAA,GAAAA,IAAA,EAAAoB,MAAA,CAAArB,GAAA,GAAAA,GAAA,EAAAgG,YAAA,SAAAlF,MAAA,gBAAAgC,IAAA,GAAAkD,YAAA,CAAA3C,UAAA,EAAAlD,gBAAA,SAAA8F,QAAA,CAAA5E,MAAA,MAAA4E,QAAA,WAAAA,SAAA5E,MAAA,EAAAiC,QAAA,oBAAAjC,MAAA,CAAApB,IAAA,QAAAoB,MAAA,CAAArB,GAAA,qBAAAqB,MAAA,CAAApB,IAAA,mBAAAoB,MAAA,CAAApB,IAAA,QAAA6C,IAAA,GAAAzB,MAAA,CAAArB,GAAA,gBAAAqB,MAAA,CAAApB,IAAA,SAAAwF,IAAA,QAAAzF,GAAA,GAAAqB,MAAA,CAAArB,GAAA,OAAAc,MAAA,kBAAAgC,IAAA,yBAAAzB,MAAA,CAAApB,IAAA,IAAAqD,QAAA,UAAAR,IAAA,GAAAQ,QAAA,GAAAnD,gBAAA,KAAA+F,MAAA,WAAAA,OAAA7C,UAAA,aAAAW,CAAA,QAAAT,UAAA,CAAAQ,MAAA,MAAAC,CAAA,SAAAA,CAAA,QAAAd,KAAA,QAAAK,UAAA,CAAAS,CAAA,OAAAd,KAAA,CAAAG,UAAA,KAAAA,UAAA,cAAA4C,QAAA,CAAA/C,KAAA,CAAAQ,UAAA,EAAAR,KAAA,CAAAI,QAAA,GAAAG,aAAA,CAAAP,KAAA,GAAA/C,gBAAA,yBAAAgG,OAAAhD,MAAA,aAAAa,CAAA,QAAAT,UAAA,CAAAQ,MAAA,MAAAC,CAAA,SAAAA,CAAA,QAAAd,KAAA,QAAAK,UAAA,CAAAS,CAAA,OAAAd,KAAA,CAAAC,MAAA,KAAAA,MAAA,QAAA9B,MAAA,GAAA6B,KAAA,CAAAQ,UAAA,kBAAArC,MAAA,CAAApB,IAAA,QAAAmG,MAAA,GAAA/E,MAAA,CAAArB,GAAA,EAAAyD,aAAA,CAAAP,KAAA,YAAAkD,MAAA,gBAAArE,KAAA,8BAAAsE,aAAA,WAAAA,cAAAzC,QAAA,EAAAf,UAAA,EAAAE,OAAA,gBAAAd,QAAA,KAAAzD,QAAA,EAAAkC,MAAA,CAAAkD,QAAA,GAAAf,UAAA,EAAAA,UAAA,EAAAE,OAAA,EAAAA,OAAA,oBAAAjC,MAAA,UAAAd,GAAA,GAAA0C,SAAA,GAAAvC,gBAAA,OAAAzC,OAAA;AAAA,SAAA4I,mBAAAC,GAAA,EAAApF,OAAA,EAAAC,MAAA,EAAAoF,KAAA,EAAAC,MAAA,EAAAvI,GAAA,EAAA8B,GAAA,cAAA4C,IAAA,GAAA2D,GAAA,CAAArI,GAAA,EAAA8B,GAAA,OAAA5B,KAAA,GAAAwE,IAAA,CAAAxE,KAAA,WAAAuD,KAAA,IAAAP,MAAA,CAAAO,KAAA,iBAAAiB,IAAA,CAAAJ,IAAA,IAAArB,OAAA,CAAA/C,KAAA,YAAAwG,OAAA,CAAAzD,OAAA,CAAA/C,KAAA,EAAAqD,IAAA,CAAA+E,KAAA,EAAAC,MAAA;AAAA,SAAAC,kBAAA3G,EAAA,6BAAAV,IAAA,SAAAsH,IAAA,GAAAC,SAAA,aAAAhC,OAAA,WAAAzD,OAAA,EAAAC,MAAA,QAAAmF,GAAA,GAAAxG,EAAA,CAAA8G,KAAA,CAAAxH,IAAA,EAAAsH,IAAA,YAAAH,MAAApI,KAAA,IAAAkI,kBAAA,CAAAC,GAAA,EAAApF,OAAA,EAAAC,MAAA,EAAAoF,KAAA,EAAAC,MAAA,UAAArI,KAAA,cAAAqI,OAAAxH,GAAA,IAAAqH,kBAAA,CAAAC,GAAA,EAAApF,OAAA,EAAAC,MAAA,EAAAoF,KAAA,EAAAC,MAAA,WAAAxH,GAAA,KAAAuH,KAAA,CAAA9D,SAAA;AAAA,IAAIoE,uBAAuB;AAC3B,IAAIC,eAAe,GAAGC,QAAQ,CAACC,IAAI,CAACC,SAAS;AAG7CC,MAAM,CAACC,OAAO,CAACC,SAAS,CAACC,WAAW;EAAA,IAAAC,IAAA,GAAAb,iBAAA,eAAAjJ,mBAAA,GAAA8G,IAAA,CAAE,SAAAiD,QAAOC,OAAO,EAAEC,MAAM,EAAEC,QAAQ;IAAA,OAAAlK,mBAAA,GAAAyB,IAAA,UAAA0I,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAzC,IAAA,GAAAyC,QAAA,CAAA/E,IAAA;QAAA;UAAA,MAE9D2E,OAAO,CAAC3G,MAAM,IAAI,iBAAiB;YAAA+G,QAAA,CAAA/E,IAAA;YAAA;UAAA;UAEnCgF,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;UAAAF,QAAA,CAAA/E,IAAA;UAAA,OAClDkF,eAAe,EAAE;QAAA;UAG3B,IAAIP,OAAO,CAAC3G,MAAM,IAAI,eAAe,EACrC;YACImH,aAAa,EAAE;UACnB;UAEA,IAAIR,OAAO,CAAC3G,MAAM,IAAI,gBAAgB,EACtC;YACIoH,cAAc,EAAE;UACpB;UAEA,IAAIT,OAAO,CAAC3G,MAAM,IAAI,kBAAkB,EACxC;YACIqH,gBAAgB,EAAE;UACtB;UAEA,IAAIV,OAAO,CAAC3G,MAAM,IAAI,gBAAgB,EACtC;YACIsH,mBAAmB,EAAE;UACzB;UAEA,IAAIX,OAAO,CAACxH,IAAI,KAAK,mBAAmB,EAAE;YACtC6G,uBAAuB,GAAGW,OAAO,CAACY,OAAO;;YAEzC;YACAP,OAAO,CAACC,GAAG,CAAC,+CAA+C,EAAEjB,uBAAuB,CAAC;UACzF;QAAC;QAAA;UAAA,OAAAe,QAAA,CAAAtC,IAAA;MAAA;IAAA,GAAAiC,OAAA;EAAA,CACJ;EAAA,iBAAAc,EAAA,EAAAC,GAAA,EAAAC,GAAA;IAAA,OAAAjB,IAAA,CAAAV,KAAA,OAAAD,SAAA;EAAA;AAAA,IAAC;AAAA,SAGaoB,eAAeA,CAAA;EAAA,OAAAS,gBAAA,CAAA5B,KAAA,OAAAD,SAAA;AAAA;AAAA,SAAA6B,iBAAA;EAAAA,gBAAA,GAAA/B,iBAAA,eAAAjJ,mBAAA,GAAA8G,IAAA,CAA9B,SAAAmE,SAAA;IAAA,IAAAC,QAAA,EAAAC,aAAA;IAAA,OAAAnL,mBAAA,GAAAyB,IAAA,UAAA2J,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAA1D,IAAA,GAAA0D,SAAA,CAAAhG,IAAA;QAAA;UACIkE,QAAQ,CAACC,IAAI,CAACC,SAAS,GAAGH,eAAe;UAEzCe,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;UAE7CY,QAAQ,GAAG3B,QAAQ,CAAC+B,gBAAgB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;UACxDH,aAAa,GAAG,EAAE;UAAAE,SAAA,CAAAhG,IAAA;UAAA,OAEhBkG,wBAAwB,EAAE;QAAA;UAAAF,SAAA,CAAAhG,IAAA;UAAA,OAC1BmG,qBAAqB,CAACN,QAAQ,EAAEC,aAAa,CAAC;QAAA;UAAAE,SAAA,CAAAhG,IAAA;UAAA,OAC9CoG,mBAAmB,EAAE;QAAA;QAAA;UAAA,OAAAJ,SAAA,CAAAvD,IAAA;MAAA;IAAA,GAAAmD,QAAA;EAAA,CAG9B;EAAA,OAAAD,gBAAA,CAAA5B,KAAA,OAAAD,SAAA;AAAA;AAED,SAASqB,aAAaA,CAAA,EAAG;EACrBjB,QAAQ,CAACC,IAAI,CAACC,SAAS,GAAGH,eAAe;AAC7C;AAEA,SAASoB,gBAAgBA,CAAA,EAAG;EACxBnB,QAAQ,CAACC,IAAI,CAACC,SAAS,GAAGH,eAAe;EAEzC,IAAMoC,YAAY,GAAGnC,QAAQ,CAACoC,aAAa,CAAC,gCAAgC,CAAC;EAC7E,IAAMC,IAAI,GAAGrC,QAAQ,CAAC+B,gBAAgB,CAAC,oCAAoC,CAAC;EAE5E,IAAIO,oBAAoB,GAAGD,IAAI,CAACtF,MAAM;EACtC,IAAIwF,oBAAoB,GAAG,EAAE;EAC7B,IAAIC,uBAAuB;EAE3B,IAAIC,SAAS,GAAGC,KAAK,CAACC,IAAI,CAACN,IAAI,CAAC;EAEhC,KAAK,IAAIrF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsF,oBAAoB,EAAEtF,CAAC,EAAE,EAAE;IAC3CwF,uBAAuB,GAAGC,SAAS,CAAC,CAAC,CAAC;IAEtCA,SAAS,CAAC5I,OAAO,CAAC,UAAC+I,OAAO,EAAK;MAC3B,IAAIC,eAAe,GAAGC,QAAQ,CAACF,OAAO,CAACR,aAAa,CAAC,YAAY,CAAC,CAACA,aAAa,CAAC,WAAW,CAAC,CAACW,WAAW,EAAE,EAAE,CAAC;MAC9G,IAAIC,WAAW,GAAGF,QAAQ,CAACN,uBAAuB,CAACJ,aAAa,CAAC,YAAY,CAAC,CAACA,aAAa,CAAC,WAAW,CAAC,CAACW,WAAW,EAAE,EAAE,CAAC;MAE1H,IAAIF,eAAe,IAAIG,WAAW,EAAE;QAChCR,uBAAuB,GAAGI,OAAO;MACrC;IACJ,CAAC,CAAC;IAEFL,oBAAoB,CAACU,OAAO,CAACT,uBAAuB,CAAC;IACrDC,SAAS,CAACS,MAAM,CAACT,SAAS,CAACU,OAAO,CAACX,uBAAuB,CAAC,EAAE,CAAC,CAAC;EACnE;EAEAD,oBAAoB,CAACa,GAAG,CAAC,UAAAC,GAAG;IAAA,OAAIlB,YAAY,CAACmB,YAAY,CAACD,GAAG,EAAElB,YAAY,CAACoB,iBAAiB,CAAC;EAAA,EAAC;EAE/F,IAAMC,sBAAsB,GAAGjB,oBAAoB,CAACa,GAAG,CAAC,UAAAR,OAAO;IAAA,OAAIA,OAAO,CAACR,aAAa,CAAC,0CAA0C,CAAC,CAACqB,YAAY,CAAC,WAAW,CAAC;EAAA,EAAC;EAE/J,IAAM9B,QAAQ,GAAG3B,QAAQ,CAAC+B,gBAAgB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;EAE5DC,wBAAwB,EAAE;EAE1B,IAAM0B,aAAa,GAAG1D,QAAQ,CAAC+B,gBAAgB,CAAC,iBAAiB,CAAC;EAElEyB,sBAAsB,CAAC3J,OAAO,CACzB,UAAC+I,OAAO,EAAK;IACV,IAAIe,cAAc,GAAGf,OAAO;IAE5Bc,aAAa,CAAC7J,OAAO,CACjB,UAACwJ,GAAG,EAAK;MACL,IAAGA,GAAG,CAACjB,aAAa,CAAC,wBAAwB,CAAC,CAACwB,SAAS,IAAID,cAAc,EAAC;QACvEhC,QAAQ,CAAC2B,YAAY,CAACD,GAAG,EAAE1B,QAAQ,CAAC4B,iBAAiB,CAAC;MAC9D;IACJ,CAAC,CAAC;EACN,CAAC,CAAE;AACX;AAEA,SAASrC,cAAcA,CAAA,EAAE;EACrBlB,QAAQ,CAACC,IAAI,CAACC,SAAS,GAAGH,eAAe;EACzCiC,wBAAwB,EAAE;AAC9B;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;;AAGA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA6B,cAAc,EAAE;AAEhB,SAASzC,mBAAmBA,CAAA,EAAE;EAC1BN,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;EAExBD,OAAO,CAACC,GAAG,CAAC,iDAAiD,EAAEjB,uBAAuB,CAAC;AAC3F;AAEA,SAAS+D,cAAcA,CAAA,EAAE;EAErB,IAAMC,gBAAgB,GAAG9D,QAAQ,CAAC+B,gBAAgB,CAAC,2BAA2B,CAAC;EAG/E+B,gBAAgB,CAACjK,OAAO,CAAC,UAAA+I,OAAO,EAAI;IAChC,IAAMmB,WAAW,GAAGnB,OAAO,CAACb,gBAAgB,CAAC,mCAAmC,CAAC;IACjF,IAAMiC,QAAQ,GAAG,EAAE;IAEnBD,WAAW,CAAClK,OAAO,CAAC,UAAAwJ,GAAG,EAAI;MACvBW,QAAQ,CAACxH,IAAI,CAAC6G,GAAG,CAACO,SAAS,CAAC;IAChC,CAAC,CAAC;IAEF,IAAMK,OAAO,GAAG;MACZhL,IAAI,EAAE,UAAU;MAChBoI,OAAO,EAAE2C,QAAQ,CAACE,IAAI,CAAC,GAAG;IAC9B,CAAC;IAED/D,MAAM,CAACC,OAAO,CAAC+D,WAAW,CAACF,OAAO,CAAC;EACvC,CAAC,CAAC;EAEFnD,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;AAChC;AAAC,SAEckB,qBAAqBA,CAAAmC,GAAA,EAAAC,GAAA;EAAA,OAAAC,sBAAA,CAAAzE,KAAA,OAAAD,SAAA;AAAA;AAAA,SAAA0E,uBAAA;EAAAA,sBAAA,GAAA5E,iBAAA,eAAAjJ,mBAAA,GAAA8G,IAAA,CAApC,SAAAgH,SAAqC5C,QAAQ,EAAEC,aAAa;IAAA,IAAA8B,aAAA;IAAA,OAAAjN,mBAAA,GAAAyB,IAAA,UAAAsM,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAArG,IAAA,GAAAqG,SAAA,CAAA3I,IAAA;QAAA;UAClD4H,aAAa,GAAG1D,QAAQ,CAAC+B,gBAAgB,CAAC,iBAAiB,CAAC;UAClE2B,aAAa,CAAC7J,OAAO,CAAC,UAAA6K,OAAO,EAAI;YAC7B,IAAMC,iBAAiB,GAAGD,OAAO,CAACtC,aAAa,CAAC,wBAAwB,CAAC,CAACwB,SAAS;YACnF,IAAIe,iBAAiB,CAACC,QAAQ,CAAC,OAAO,CAAC,IAAID,iBAAiB,CAACC,QAAQ,CAAC,QAAQ,CAAC,EAAE;cAE7EhD,aAAa,CAACqB,OAAO,CAACyB,OAAO,CAAC;YAClC;UACJ,CAAC,CAAC;UACF9C,aAAa,CAACwB,GAAG,CAAC,UAAAR,OAAO;YAAA,OAAIjB,QAAQ,CAAC2B,YAAY,CAACV,OAAO,EAAEjB,QAAQ,CAAC4B,iBAAiB,CAAC;UAAA,EAAC;QAAA;QAAA;UAAA,OAAAkB,SAAA,CAAAlG,IAAA;MAAA;IAAA,GAAAgG,QAAA;EAAA,CAC3F;EAAA,OAAAD,sBAAA,CAAAzE,KAAA,OAAAD,SAAA;AAAA;AAAA,SACcsC,mBAAmBA,CAAA;EAAA,OAAA2C,oBAAA,CAAAhF,KAAA,OAAAD,SAAA;AAAA;AAAA,SAAAiF,qBAAA;EAAAA,oBAAA,GAAAnF,iBAAA,eAAAjJ,mBAAA,GAAA8G,IAAA,CAAlC,SAAAuH,SAAA;IAAA,IAAAC,aAAA,EAAA5C,YAAA,EAAAE,IAAA;IAAA,OAAA5L,mBAAA,GAAAyB,IAAA,UAAA8M,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAA7G,IAAA,GAAA6G,SAAA,CAAAnJ,IAAA;QAAA;UACUiJ,aAAa,GAAG,EAAE;UAClB5C,YAAY,GAAGnC,QAAQ,CAACoC,aAAa,CAAC,gCAAgC,CAAC;UAEvEC,IAAI,GAAGrC,QAAQ,CAAC+B,gBAAgB,CAAC,oCAAoC,CAAC;UAC5EM,IAAI,CAACxI,OAAO,CAAE,UAAAwJ,GAAG,EAAI;YACjB,IAAM6B,SAAS,GAAG7B,GAAG,CAACjB,aAAa,CAAC,kBAAkB,CAAC;YACvD,IAAM+C,EAAE,GAAGD,SAAS,CAAC9C,aAAa,CAAC,gCAAgC,CAAC;YACpE,IAAMgD,SAAS,GAAGD,EAAE,CAAC1B,YAAY,CAAC,WAAW,CAAC;YAE9C,IAAG2B,SAAS,CAACR,QAAQ,CAAC,OAAO,CAAC,IAAIQ,SAAS,CAACR,QAAQ,CAAC,QAAQ,CAAC,EAAE;cAC5DG,aAAa,CAAC9B,OAAO,CAACI,GAAG,CAAC;YAC9B;UAEJ,CAAC,CAAC;UAEF0B,aAAa,CAAC3B,GAAG,CAAC,UAAAC,GAAG;YAAA,OAAIlB,YAAY,CAACmB,YAAY,CAACD,GAAG,EAAElB,YAAY,CAACoB,iBAAiB,CAAC;UAAA,EAAC;QAAA;QAAA;UAAA,OAAA0B,SAAA,CAAA1G,IAAA;MAAA;IAAA,GAAAuG,QAAA;EAAA,CAC3F;EAAA,OAAAD,oBAAA,CAAAhF,KAAA,OAAAD,SAAA;AAAA;AAAA,SACcoC,wBAAwBA,CAAA;EAAA,OAAAqD,yBAAA,CAAAxF,KAAA,OAAAD,SAAA;AAAA;AAAA,SAAAyF,0BAAA;EAAAA,yBAAA,GAAA3F,iBAAA,eAAAjJ,mBAAA,GAAA8G,IAAA,CAAvC,SAAA+H,SAAA;IAAA,IAAA3D,QAAA,EAAA+B,aAAA;IAAA,OAAAjN,mBAAA,GAAAyB,IAAA,UAAAqN,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAApH,IAAA,GAAAoH,SAAA,CAAA1J,IAAA;QAAA;UAEU6F,QAAQ,GAAG3B,QAAQ,CAAC+B,gBAAgB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;UACtD2B,aAAa,GAAG1D,QAAQ,CAAC+B,gBAAgB,CAAC,iBAAiB,CAAC;UAClE2B,aAAa,CAAC7J,OAAO,CAAC,UAAA6K,OAAO,EAAI;YAC7B,IAAMe,UAAU,GAAGf,OAAO,CAACgB,SAAS,CAACd,QAAQ,CAAC,6BAA6B,CAAC;YAE5E,IAAG,CAACa,UAAU,EAAC;cACX,IAAME,oBAAoB,GAAGjB,OAAO,CAACtC,aAAa,CAAC,4CAA4C,CAAC,CAACwB,SAAS;cAC1G,IAAMe,iBAAiB,GAAGD,OAAO,CAACtC,aAAa,CAAC,wBAAwB,CAAC;cACzEuC,iBAAiB,CAACf,SAAS,GAAG+B,oBAAoB;cAClDhE,QAAQ,CAACiE,WAAW,CAAClB,OAAO,CAAC;YACjC,CAAC,MAAK;cACFA,OAAO,CAACmB,MAAM,EAAE;YACpB;UACJ,CAAC,CAAC;QAAA;QAAA;UAAA,OAAAL,SAAA,CAAAjH,IAAA;MAAA;IAAA,GAAA+G,QAAA;EAAA,CACL;EAAA,OAAAD,yBAAA,CAAAxF,KAAA,OAAAD,SAAA;AAAA,C","sources":["webpack://empty-project/./src/index.js"],"sourcesContent":["\nlet globalFunctionForReturn;\nlet originalContent = document.body.innerHTML;\n\n\nchrome.runtime.onMessage.addListener( async (request, sender, response) => {\n\n    if (request.method == \"sortByTestFirst\")\n    {\n        console.log(\"Call the method for sorting by test first\")\n        await sortByTestFirst();\n    }\n\n    if (request.method == \"theBigNothing\")\n    {\n        theBigNothing()\n    }\n\n    if (request.method == \"alphabetically\")\n    {\n        alphabetically()\n    }\n\n    if (request.method == \"mostChangedFiles\")\n    {\n        mostChangedFiles()\n    }\n\n    if (request.method == \"FunctionHelper\")\n    {\n        getTreeSitterReturn()\n    }\n\n    if (request.type === 'functionForReturn') {\n        globalFunctionForReturn = request.content;\n\n        // Now you can use the globalFunctionForReturn data in your content script\n        console.log('Received functionForReturn in content script:', globalFunctionForReturn);\n    }\n})\n\n\nasync function sortByTestFirst (){\n    document.body.innerHTML = originalContent;\n\n    console.log(\"ate aqui foi async, bom eu acho rsrs\")\n\n    const mainTree = document.querySelectorAll(\"[role=tree]\")[0];\n    let articlesArray = [];\n    \n    await separateFilesFromFolders()    \n    await sorteFilesByTestFirst(mainTree, articlesArray)\n    await sorteDivsByTestDivs()\n    // await someHover() \n\n}\n\nfunction theBigNothing (){\n    document.body.innerHTML = originalContent;\n}\n\nfunction mostChangedFiles() {\n    document.body.innerHTML = originalContent;\n\n    const divContainer = document.querySelector(\".js-diff-progressive-container\")\n    const divs = document.querySelectorAll(\".file.js-file.js-details-container\");\n\n    var arrayBatatinhaLength = divs.length;\n    var arrayBatatinhaSorted = [];\n    var thatsTheBigestBatatinha; \n\n    var divsArray = Array.from(divs);\n\n    for (let i = 0; i < arrayBatatinhaLength; i++) {\n        thatsTheBigestBatatinha = divsArray[0];\n\n        divsArray.forEach((element) => {\n            var currentDiffstat = parseInt(element.querySelector(\".file-info\").querySelector(\".diffstat\").textContent, 10);\n            var maxDiffstat = parseInt(thatsTheBigestBatatinha.querySelector(\".file-info\").querySelector(\".diffstat\").textContent, 10);\n\n            if (currentDiffstat >= maxDiffstat) {\n                thatsTheBigestBatatinha = element;\n            }\n        });\n\n        arrayBatatinhaSorted.unshift(thatsTheBigestBatatinha);\n        divsArray.splice(divsArray.indexOf(thatsTheBigestBatatinha), 1);\n    }\n\n    arrayBatatinhaSorted.map(div => divContainer.insertBefore(div, divContainer.firstElementChild))\n\n    const orderFilesAfterSorting = arrayBatatinhaSorted.map(element => element.querySelector(\".code-review.blob-code button[data-path]\").getAttribute(\"data-path\"))\n\n    const mainTree = document.querySelectorAll(\"[role=tree]\")[0];\n    \n    separateFilesFromFolders()\n\n    const mainTreeItems = document.querySelectorAll(\"[role=treeitem]\");\n\n    orderFilesAfterSorting.forEach(\n        ((element) => {\n            var oBraboPrimeiro = element\n\n            mainTreeItems.forEach(\n                (div) => {\n                    if(div.querySelector('.ActionList-item-label').innerText == oBraboPrimeiro){\n                        mainTree.insertBefore(div, mainTree.firstElementChild)\n                }\n            })\n        }))\n}\n\nfunction alphabetically(){\n    document.body.innerHTML = originalContent;  \n    separateFilesFromFolders()\n}\n\n// async function someHover(){\n\n//     // const divs = document.querySelectorAll(\".file.js-file.js-details-container\");\n//     // divs.forEach( div => {\n//     //     const divWithTd = div.querySelector(\".js-file-content\")\n\n//     //     console.log(\"divWithTd: \", divWithTd)\n//     //     const bigPotato = divWithTd.querySelector(\".blob-code-inner.blob-code-marker.js-code-nav-pass.js-skip-tagsearch\")\n\n//     //     console.log(bigPotato?.innerText)\n\n//     //     divElement = document.createElement(\"div\");\n//     //     let p = document.createElement(\"p\");\n//     //     p.innerHTML = \n//     //     `\n//     //     function generic(param1, param2) {\n//     //         return param1.toString() + ' ' + param2.toString();\n//     //     }\n//     //     `\n//     //     divElement.appendChild(p);  \n//     //     divElement.style.position = \"absolute\";\n//     //     divElement.style.zIndex = \"1000\";\n//     //     divElement.style.willChange = \"transform\"; \n\n//     //     divElement.style.background = \"white\"\n//     //     divElement.style.padding = \"20px 30px 20px 30px\"\n//     //     divElement.style.borderRadius = \"10px\"\n//     //     divElement.style.transition = \"opacity 0.5s ease-in-out\"; \n//     //     divElement.style.opacity = \"0\"; \n//     //     divElement.id = \"extraContent\"\n\n\n\n//     //     if (bigPotato) {\n//     //         bigPotato.addEventListener(\"mouseover\", (event) => {\n//     //             if(event.target.innerText == \"let\"){\n//     //                 event.target.append(divElement);\n//     //                 console.log(\"tem um let aqui rsrs\")\n//     //                 divElement.offsetHeight; \n//     //                 divElement.style.opacity = \"1\";\n//     //             }\n\n//     //         }); \n\n//     //         bigPotato.addEventListener(\"mouseout\", (event) => {\n\n//     //             const pElementToRemove = document.getElementById(\"extraContent\");\n//     //             if (pElementToRemove && pElementToRemove.parentElement === event.target) {\n//     //                 pElementToRemove.style.opacity = \"0\"; \n//     //                 setTimeout(() => {\n//     //                     pElementToRemove.remove();\n//     //                 }, 500); \n//     //             }\n//     //         });\n//     //     }\n        \n//     // })\n\n//     const tableWithContent = document.querySelectorAll(\".diff-table.js-diff-table\")\n\n//     tableWithContent.forEach(element => {\n//         const allSpanTags = element.querySelectorAll(\".blob-code-inner.blob-code-marker\")\n\n        \n        \n//         allSpanTags.forEach(div => {\n//             const spanTags = div.getElementsByTagName('span')\n\n//             const divElement = document.createElement(\"div\");\n//             let p = document.createElement(\"p\");\n//             p.innerHTML = \n//             `\n//             function generic(param1, param2) {\n//                 return param1.toString() + ' ' + param2.toString();\n//             }\n//             `\n//             divElement.appendChild(p);  \n//             divElement.style.position = \"absolute\";\n//             divElement.style.zIndex = \"1000\";\n//             divElement.style.willChange = \"transform\"; \n\n//             divElement.style.background = \"white\"\n//             divElement.style.padding = \"20px 30px 20px 30px\"\n//             divElement.style.borderRadius = \"10px\"\n//             // divElement.style.transition = \"opacity 0.5s ease-in-out\"; \n//             // divElement.style.opacity = \"0\"; \n//             divElement.id = \"extraContent\"\n\n            \n//             for(let i=0; i<spanTags.length; i++){\n\n//                 console.log(spanTags[i].innerText)\n\n            \n//                 spanTags[i].addEventListener(\"mouseover\", (event) => {\n\n//                     console.log(\"dentro da tag tem isso: \")\n//                     console.log(event.target.innerText)\n\n//                     spanTags[i].style.color = \"red\"\n//                     event.target.append(divElement);\n                    \n//                 }) \n\n//                 spanTags[i].addEventListener(\"mouseout\", (event) => {\n\n//                     const pElementToRemove = document.getElementById(\"extraContent\");\n//                     if (pElementToRemove && pElementToRemove.parentElement === event.target) {\n//                         pElementToRemove.style.opacity = \"0\"; \n//                         setTimeout(() => {\n//                             pElementToRemove.remove();\n//                         }, 500); \n//                     }\n//                     });\n//                 }\n//         });\n//     });\n// }\n\n// someHover()\ncallTreeSitter() \n\nfunction getTreeSitterReturn(){\n    console.log(\"caiu aqui\");\n\n    console.log('Using functionForReturn in getTreeSitterReturn:', globalFunctionForReturn);\n}\n\nfunction callTreeSitter(){\n\n    const tableWithContent = document.querySelectorAll(\".diff-table.js-diff-table\")\n    \n\n    tableWithContent.forEach(element => {\n        const allSpanTags = element.querySelectorAll(\".blob-code-inner.blob-code-marker\")\n        const spanText = []\n    \n        allSpanTags.forEach(div => {\n            spanText.push(div.innerText)\n        });\n    \n        const message = {\n            type: 'spanText',\n            content: spanText.join(' ')\n        };\n    \n        chrome.runtime.sendMessage(message);\n    });\n\n    console.log(\"caiu aqui viu\")\n}\n\nasync function sorteFilesByTestFirst(mainTree, articlesArray){\n    const mainTreeItems = document.querySelectorAll(\"[role=treeitem]\")\n    mainTreeItems.forEach(article => {\n        const tagThatHasTheText = article.querySelector('.ActionList-item-label').innerText\n        if (tagThatHasTheText.includes(\"test_\") || tagThatHasTheText.includes(\"teste_\")) {\n            \n            articlesArray.unshift(article)\n        }\n    })\n    articlesArray.map(element => mainTree.insertBefore(element, mainTree.firstElementChild))\n}\nasync function sorteDivsByTestDivs() {\n    const divsTestArray = [];\n    const divContainer = document.querySelector(\".js-diff-progressive-container\")\n \n    const divs = document.querySelectorAll(\".file.js-file.js-details-container\");\n    divs.forEach( div => {\n        const divWithTd = div.querySelector(\".js-file-content\")\n        const td = divWithTd.querySelector(\".code-review button[data-path]\")\n        const tdPathTex = td.getAttribute(\"data-path\");\n\n        if(tdPathTex.includes(\"test_\") || tdPathTex.includes(\"teste_\")) {\n            divsTestArray.unshift(div)\n        }\n\n    })\n\n    divsTestArray.map(div => divContainer.insertBefore(div, divContainer.firstElementChild))\n}\nasync function separateFilesFromFolders(){\n\n    const mainTree = document.querySelectorAll(\"[role=tree]\")[0];\n    const mainTreeItems = document.querySelectorAll(\"[role=treeitem]\")\n    mainTreeItems.forEach(article => {\n        const itsAFolder = article.className.includes(\"ActionList-item--hasSubItem\")\n\n        if(!itsAFolder){\n            const fileNameWithFullPath = article.querySelector('span[data-filterable-item-text=\"\"][hidden]').innerText\n            const tagThatHasTheText = article.querySelector('.ActionList-item-label')\n            tagThatHasTheText.innerText = fileNameWithFullPath\n            mainTree.appendChild(article)          \n        } else{\n            article.remove()      \n        }\n    })\n}\n\n\n\n  \n"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","_catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","globalFunctionForReturn","originalContent","document","body","innerHTML","chrome","runtime","onMessage","addListener","_ref","_callee","request","sender","response","_callee$","_context","console","log","sortByTestFirst","theBigNothing","alphabetically","mostChangedFiles","getTreeSitterReturn","content","_x","_x2","_x3","_sortByTestFirst","_callee2","mainTree","articlesArray","_callee2$","_context2","querySelectorAll","separateFilesFromFolders","sorteFilesByTestFirst","sorteDivsByTestDivs","divContainer","querySelector","divs","arrayBatatinhaLength","arrayBatatinhaSorted","thatsTheBigestBatatinha","divsArray","Array","from","element","currentDiffstat","parseInt","textContent","maxDiffstat","unshift","splice","indexOf","map","div","insertBefore","firstElementChild","orderFilesAfterSorting","getAttribute","mainTreeItems","oBraboPrimeiro","innerText","callTreeSitter","tableWithContent","allSpanTags","spanText","message","join","sendMessage","_x4","_x5","_sorteFilesByTestFirst","_callee3","_callee3$","_context3","article","tagThatHasTheText","includes","_sorteDivsByTestDivs","_callee4","divsTestArray","_callee4$","_context4","divWithTd","td","tdPathTex","_separateFilesFromFolders","_callee5","_callee5$","_context5","itsAFolder","className","fileNameWithFullPath","appendChild","remove"],"sourceRoot":""}